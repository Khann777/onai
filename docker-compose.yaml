version: "3.8"

services:
  web:
    image: onai-backend  # Используем общий образ
    container_name: onai-web
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully
    env_file:
      - .env
    ports:
      - "8000:8000"
    command: ["gunicorn", "--bind", "0.0.0.0:8000", "config.wsgi:application"]

  db:
    image: postgres:15
    container_name: onai-db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: onai_db
      POSTGRES_USER: davlyat
      POSTGRES_PASSWORD: 1
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      retries: 5

  redis:
    image: redis:7
    container_name: onai-redis
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      retries: 5

  celery:
    image: onai-backend
    container_name: onai-celery
    restart: always
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env
    command: ["celery", "-A", "config", "worker", "--loglevel=info"]

  migrations:
    image: onai-backend
    container_name: onai-migrations
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: ["python", "manage.py", "migrate"]

volumes:
  pg_data:
  static_volume:
  logs_volume:
